{"ast":null,"code":"const initialState = {\n  counter: 0,\n  results: []\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case 'INCREMENT':\n      const newState = Object.assign({}, state);\n      newState.counter = state.counter + 1;\n      return newState;\n    // return {\n    //   counter: state.counter + 1,\n    // };\n\n    case 'DECREMENT':\n      // console.log('DECREMENT Clicked');\n      // console.log('DECREMENT Action Properties', action);\n      return { ...state,\n        counter: state.counter - 1\n      };\n\n    case 'ADD':\n      //  console.log('ADD Clicked');\n      //  console.log('ADD Action Properties', action);\n      return { ...state,\n        counter: state.counter + action.val\n      };\n\n    case 'SUBTRACT':\n      //  console.log('SUBTRACT Clicked');\n      //  console.log('SUBTRACT Action Properties', action);\n      return { ...state,\n        counter: state.counter - action.val\n      };\n\n    case 'STORE_RESULT':\n      console.log('STORE_RESULT Clicked'); //     console.log(...state);\n\n      return { ...state,\n        results: state.results.concat({\n          id: new Date(),\n          value: state.counter\n        })\n      };\n\n    case 'DELETE_RESULT':\n      // const id =2;\n      // const newArray = [...state.results];\n      // newArray.splice(id, 1);\n      const updatedArray = state.results.filter((result, index) => index !== id);\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/media/RESEARCH/Projects/tutorials/react-doctrina/redux--01-start/src/store/reducer.js"],"names":["initialState","counter","results","reducer","state","action","console","log","type","newState","Object","assign","val","concat","id","Date","value","updatedArray","filter","result","index"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CADU;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,WAAL;AACE,YAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAlB,CAAjB;AACAK,MAAAA,QAAQ,CAACR,OAAT,GAAmBG,KAAK,CAACH,OAAN,GAAgB,CAAnC;AACA,aAAOQ,QAAP;AACF;AACA;AACA;;AACA,SAAK,WAAL;AACE;AACA;AACA,aAAO,EACL,GAAGL,KADE;AAELH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AAFpB,OAAP;;AAKF,SAAK,KAAL;AACE;AACA;AACA,aAAO,EACL,GAAGG,KADE;AAELH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACO;AAF3B,OAAP;;AAKF,SAAK,UAAL;AACE;AACA;AACA,aAAO,EACL,GAAGR,KADE;AAELH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACO;AAF3B,OAAP;;AAKF,SAAK,cAAL;AACEN,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EADF,CAEE;;AACA,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcW,MAAd,CAAqB;AAACC,UAAAA,EAAE,EAAE,IAAIC,IAAJ,EAAL;AAAiBC,UAAAA,KAAK,EAAEZ,KAAK,CAACH;AAA9B,SAArB;AAFJ,OAAP;;AAKF,SAAK,eAAL;AACE;AACA;AACA;AACA,YAAMgB,YAAY,GAAGb,KAAK,CAACF,OAAN,CAAcgB,MAAd,CACnB,CAACC,MAAD,EAASC,KAAT,KAAmBA,KAAK,KAAKN,EADV,CAArB;AAGA,aAAO,EAAC,GAAGV;AAAJ,OAAP;;AAEF;AACE,aAAOA,KAAP;AAlDJ;AAoDD,CAtDD;;AAwDA,eAAeD,OAAf","sourcesContent":["const initialState = {\n  counter: 0,\n  results: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(action);\n  switch (action.type) {\n    case 'INCREMENT':\n      const newState = Object.assign({}, state);\n      newState.counter = state.counter + 1;\n      return newState;\n    // return {\n    //   counter: state.counter + 1,\n    // };\n    case 'DECREMENT':\n      // console.log('DECREMENT Clicked');\n      // console.log('DECREMENT Action Properties', action);\n      return {\n        ...state,\n        counter: state.counter - 1,\n      };\n\n    case 'ADD':\n      //  console.log('ADD Clicked');\n      //  console.log('ADD Action Properties', action);\n      return {\n        ...state,\n        counter: state.counter + action.val,\n      };\n\n    case 'SUBTRACT':\n      //  console.log('SUBTRACT Clicked');\n      //  console.log('SUBTRACT Action Properties', action);\n      return {\n        ...state,\n        counter: state.counter - action.val,\n      };\n\n    case 'STORE_RESULT':\n      console.log('STORE_RESULT Clicked');\n      //     console.log(...state);\n      return {\n        ...state,\n        results: state.results.concat({id: new Date(), value: state.counter}),\n      };\n\n    case 'DELETE_RESULT':\n      // const id =2;\n      // const newArray = [...state.results];\n      // newArray.splice(id, 1);\n      const updatedArray = state.results.filter(\n        (result, index) => index !== id\n      );\n      return {...state};\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}