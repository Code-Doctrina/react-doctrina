{"ast":null,"code":"import * as actionTypes from '../actions';\nconst initialState = {\n  results: []\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case actionTypes.STORE_RESULT:\n      console.log('STORE_RESULT Clicked'); //     console.log(...state);\n\n      return { ...state,\n        results: state.results.concat({\n          id: new Date(),\n          value: state.counter\n        })\n      };\n\n    case actionTypes.DELETE_RESULT:\n      // const id =2;\n      // const newArray = [...state.results];\n      // newArray.splice(id, 1);\n      const updatedArray = state.results.filter((result, index) => result.id !== action.resultElId);\n      return { ...state,\n        results: updatedArray\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/media/RESEARCH/Projects/tutorials/react-doctrina/redux--01-start/src/store/reducers/result.js"],"names":["actionTypes","initialState","results","reducer","state","action","console","log","type","STORE_RESULT","concat","id","Date","value","counter","DELETE_RESULT","updatedArray","filter","result","index","resultElId"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKR,WAAW,CAACS,YAAjB;AACEH,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EADF,CAEE;;AACA,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcQ,MAAd,CAAqB;AAACC,UAAAA,EAAE,EAAE,IAAIC,IAAJ,EAAL;AAAiBC,UAAAA,KAAK,EAAET,KAAK,CAACU;AAA9B,SAArB;AAFJ,OAAP;;AAKF,SAAKd,WAAW,CAACe,aAAjB;AACE;AACA;AACA;AACA,YAAMC,YAAY,GAAGZ,KAAK,CAACF,OAAN,CAAce,MAAd,CACnB,CAACC,MAAD,EAASC,KAAT,KAAmBD,MAAM,CAACP,EAAP,KAAcN,MAAM,CAACe,UADrB,CAArB;AAGA,aAAO,EAAC,GAAGhB,KAAJ;AAAWF,QAAAA,OAAO,EAAEc;AAApB,OAAP;;AAEF;AACE,aAAOZ,KAAP;AAnBJ;AAqBD,CAvBD;;AAyBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions';\nconst initialState = {\n  results: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(action);\n  switch (action.type) {\n    case actionTypes.STORE_RESULT:\n      console.log('STORE_RESULT Clicked');\n      //     console.log(...state);\n      return {\n        ...state,\n        results: state.results.concat({id: new Date(), value: state.counter}),\n      };\n\n    case actionTypes.DELETE_RESULT:\n      // const id =2;\n      // const newArray = [...state.results];\n      // newArray.splice(id, 1);\n      const updatedArray = state.results.filter(\n        (result, index) => result.id !== action.resultElId\n      );\n      return {...state, results: updatedArray};\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}