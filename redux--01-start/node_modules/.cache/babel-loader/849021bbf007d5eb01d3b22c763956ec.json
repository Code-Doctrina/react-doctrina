{"ast":null,"code":"import * as actionTypes from './actions';\nconst initialState = {\n  counter: 0,\n  results: []\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      const newState = Object.assign({}, state);\n      newState.counter = state.counter + 1;\n      return newState;\n    // return {\n    //   counter: state.counter + 1,\n    // };\n\n    case actionTypes.DECREMENT:\n      // console.log('DECREMENT Clicked');\n      // console.log('DECREMENT Action Properties', action);\n      return { ...state,\n        counter: state.counter - 1\n      };\n\n    case actionTypes.ADD:\n      //  console.log('ADD Clicked');\n      //  console.log('ADD Action Properties', action);\n      return { ...state,\n        counter: state.counter + action.val\n      };\n\n    case actionTypes.SUBTRACT:\n      //  console.log('SUBTRACT Clicked');\n      //  console.log('SUBTRACT Action Properties', action);\n      return { ...state,\n        counter: state.counter - action.val\n      };\n\n    case actionTypes.STORE_RESULT:\n      console.log('STORE_RESULT Clicked'); //     console.log(...state);\n\n      return { ...state,\n        results: state.results.concat({\n          id: new Date(),\n          value: state.counter\n        })\n      };\n\n    case actionTypes.DELETE_RESULT:\n      // const id =2;\n      // const newArray = [...state.results];\n      // newArray.splice(id, 1);\n      const updatedArray = state.results.filter((result, index) => result.id !== action.resultElId);\n      return { ...state,\n        results: updatedArray\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/media/RESEARCH/Projects/tutorials/react-doctrina/redux--01-start/src/store/reducer.js"],"names":["actionTypes","initialState","counter","results","reducer","state","action","console","log","type","INCREMENT","newState","Object","assign","DECREMENT","ADD","val","SUBTRACT","STORE_RESULT","concat","id","Date","value","DELETE_RESULT","updatedArray","filter","result","index","resultElId"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,WAA7B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CADU;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKT,WAAW,CAACU,SAAjB;AACE,YAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,CAAjB;AACAM,MAAAA,QAAQ,CAACT,OAAT,GAAmBG,KAAK,CAACH,OAAN,GAAgB,CAAnC;AACA,aAAOS,QAAP;AACF;AACA;AACA;;AACA,SAAKX,WAAW,CAACc,SAAjB;AACE;AACA;AACA,aAAO,EACL,GAAGT,KADE;AAELH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AAFpB,OAAP;;AAKF,SAAKF,WAAW,CAACe,GAAjB;AACE;AACA;AACA,aAAO,EACL,GAAGV,KADE;AAELH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACU;AAF3B,OAAP;;AAKF,SAAKhB,WAAW,CAACiB,QAAjB;AACE;AACA;AACA,aAAO,EACL,GAAGZ,KADE;AAELH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACU;AAF3B,OAAP;;AAKF,SAAKhB,WAAW,CAACkB,YAAjB;AACEX,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EADF,CAEE;;AACA,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcgB,MAAd,CAAqB;AAACC,UAAAA,EAAE,EAAE,IAAIC,IAAJ,EAAL;AAAiBC,UAAAA,KAAK,EAAEjB,KAAK,CAACH;AAA9B,SAArB;AAFJ,OAAP;;AAKF,SAAKF,WAAW,CAACuB,aAAjB;AACE;AACA;AACA;AACA,YAAMC,YAAY,GAAGnB,KAAK,CAACF,OAAN,CAAcsB,MAAd,CACnB,CAACC,MAAD,EAASC,KAAT,KAAmBD,MAAM,CAACN,EAAP,KAAcd,MAAM,CAACsB,UADrB,CAArB;AAGA,aAAO,EAAC,GAAGvB,KAAJ;AAAWF,QAAAA,OAAO,EAAEqB;AAApB,OAAP;;AAEF;AACE,aAAOnB,KAAP;AAlDJ;AAoDD,CAtDD;;AAwDA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from './actions';\nconst initialState = {\n  counter: 0,\n  results: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(action);\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      const newState = Object.assign({}, state);\n      newState.counter = state.counter + 1;\n      return newState;\n    // return {\n    //   counter: state.counter + 1,\n    // };\n    case actionTypes.DECREMENT:\n      // console.log('DECREMENT Clicked');\n      // console.log('DECREMENT Action Properties', action);\n      return {\n        ...state,\n        counter: state.counter - 1,\n      };\n\n    case actionTypes.ADD:\n      //  console.log('ADD Clicked');\n      //  console.log('ADD Action Properties', action);\n      return {\n        ...state,\n        counter: state.counter + action.val,\n      };\n\n    case actionTypes.SUBTRACT:\n      //  console.log('SUBTRACT Clicked');\n      //  console.log('SUBTRACT Action Properties', action);\n      return {\n        ...state,\n        counter: state.counter - action.val,\n      };\n\n    case actionTypes.STORE_RESULT:\n      console.log('STORE_RESULT Clicked');\n      //     console.log(...state);\n      return {\n        ...state,\n        results: state.results.concat({id: new Date(), value: state.counter}),\n      };\n\n    case actionTypes.DELETE_RESULT:\n      // const id =2;\n      // const newArray = [...state.results];\n      // newArray.splice(id, 1);\n      const updatedArray = state.results.filter(\n        (result, index) => result.id !== action.resultElId\n      );\n      return {...state, results: updatedArray};\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}