{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/RESEARCH/Projects/tutorials/react-doctrina/redux--01-start/src/containers/Counter/Counter.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CounterControl from '../../components/CounterControl/CounterControl';\nimport CounterOutput from '../../components/CounterOutput/CounterOutput';\nimport * as actionTypes from '../../store/actions';\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counter: 0\n    };\n\n    this.counterChangedHandler = (action, value) => {\n      switch (action) {\n        case 'inc':\n          this.setState(prevState => {\n            return {\n              counter: prevState.counter + 1\n            };\n          });\n          break;\n\n        case 'dec':\n          this.setState(prevState => {\n            return {\n              counter: prevState.counter - 1\n            };\n          });\n          break;\n\n        case 'add':\n          this.setState(prevState => {\n            return {\n              counter: prevState.counter + value\n            };\n          });\n          break;\n\n        case 'sub':\n          this.setState(prevState => {\n            return {\n              counter: prevState.counter - value\n            };\n          });\n          break;\n      }\n    };\n  }\n\n  render() {\n    // console.log(storedResults)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CounterOutput, {\n        value: this.props.ctr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CounterControl, {\n        label: \"Increment\",\n        clicked: this.props.onIncrementCounter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CounterControl, {\n        label: \"Decrement\",\n        clicked: this.props.onDecrementCounter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CounterControl, {\n        label: \"Add 10\",\n        clicked: this.props.onAddCounter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CounterControl, {\n        label: \"Subtract 15\",\n        clicked: this.props.onSubtractCounter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.props.onStoreResult,\n        children: \"Store Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.props.storedResults.map(strResult => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => this.props.onDeleteResult(strResult.id),\n          children: strResult.value\n        }, strResult.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ctr: state.ctr.counter,\n    storedResults: state.res.results\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIncrementCounter: () => dispatch({\n      type: actionTypes.INCREMENT\n    }),\n    onDecrementCounter: () => dispatch({\n      type: actionTypes.DECREMENT\n    }),\n    onAddCounter: () => dispatch({\n      type: actionTypes.ADD,\n      val: 10\n    }),\n    onSubtractCounter: () => dispatch({\n      type: actionTypes.SUBTRACT,\n      val: 15\n    }),\n    onStoreResult: () => dispatch({\n      type: actionTypes.STORE_RESULT\n    }),\n    onDeleteResult: id => dispatch({\n      type: actionTypes.DELETE_RESULT,\n      resultElId: id\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"sources":["/media/RESEARCH/Projects/tutorials/react-doctrina/redux--01-start/src/containers/Counter/Counter.js"],"names":["React","Component","connect","CounterControl","CounterOutput","actionTypes","Counter","state","counter","counterChangedHandler","action","value","setState","prevState","render","props","ctr","onIncrementCounter","onDecrementCounter","onAddCounter","onSubtractCounter","onStoreResult","storedResults","map","strResult","onDeleteResult","id","mapStateToProps","res","results","mapDispatchToProps","dispatch","type","INCREMENT","DECREMENT","ADD","val","SUBTRACT","STORE_RESULT","DELETE_RESULT","resultElId"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport CounterControl from '../../components/CounterControl/CounterControl';\nimport CounterOutput from '../../components/CounterOutput/CounterOutput';\nimport * as actionTypes from '../../store/actions';\n\n\nclass Counter extends Component {\n  state = {\n    counter: 0,\n  };\n\n  counterChangedHandler = (action, value) => {\n    switch (action) {\n      case 'inc':\n        this.setState((prevState) => {\n          return {counter: prevState.counter + 1};\n        });\n        break;\n      case 'dec':\n        this.setState((prevState) => {\n          return {counter: prevState.counter - 1};\n        });\n        break;\n      case 'add':\n        this.setState((prevState) => {\n          return {counter: prevState.counter + value};\n        });\n        break;\n      case 'sub':\n        this.setState((prevState) => {\n          return {counter: prevState.counter - value};\n        });\n        break;\n    }\n  };\n\n  render() {\n   // console.log(storedResults)\n    return (\n      <div>\n        <CounterOutput value={this.props.ctr} />\n        <CounterControl\n          label=\"Increment\"\n          clicked={this.props.onIncrementCounter}\n        />\n        <CounterControl\n          label=\"Decrement\"\n          clicked={this.props.onDecrementCounter}\n        />\n        <CounterControl label=\"Add 10\" clicked={this.props.onAddCounter} />\n        <CounterControl\n          label=\"Subtract 15\"\n          clicked={this.props.onSubtractCounter}\n        />\n        <hr />\n        <button onClick={this.props.onStoreResult}>Store Results</button>\n        <ul>\n          {this.props.storedResults.map((strResult) => (\n            <li key={strResult.id} onClick={() => this.props.onDeleteResult(strResult.id)}>{strResult.value}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ctr: state.ctr.counter,\n    storedResults: state.res.results,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIncrementCounter: () => dispatch({type: actionTypes.INCREMENT}),\n    onDecrementCounter: () => dispatch({type: actionTypes.DECREMENT}),\n    onAddCounter: () => dispatch({type: actionTypes.ADD, val: 10}),\n    onSubtractCounter: () => dispatch({type: actionTypes.SUBTRACT, val: 15}),\n    onStoreResult: () => dispatch({type: actionTypes.STORE_RESULT}),\n    onDeleteResult: (id) => dispatch({type: actionTypes.DELETE_RESULT, resultElId: id}),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n"]},"metadata":{},"sourceType":"module"}